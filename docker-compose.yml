services:
  mongodb:
    image: mongo:7.0
    container_name: ultra-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ultra_user
      MONGO_INITDB_ROOT_PASSWORD: ultra_password
      MONGO_INITDB_DATABASE: ultra
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - ultra-network

  postgres:
    image: postgres:15
    container_name: ultra-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ultra_user
      POSTGRES_PASSWORD: ultra_password
      POSTGRES_DB: ultra_db
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=md5"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - ultra-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ultra_user -d ultra_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Application service (uses locally built image)
  app:
    image: ultra:latest
    container_name: ultra-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_started
    environment:
      MONGODB_URI: mongodb://ultra_user:ultra_password@mongodb:27017/ultra?authSource=admin
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ultra_user
      POSTGRES_PASSWORD: ultra_password
      POSTGRES_DB: ultra_db
      POSTGRES_SSL: disable
      PORT: 8080
      JWT_SECRET: your-secret-key-here
    ports:
      - "8080:8080"
    networks:
      - ultra-network

volumes:
  mongodb_data:
  postgres_data:

networks:
  ultra-network:
    driver: bridge