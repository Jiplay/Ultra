version: '3.8'

# Production deployment configuration
# This file contains only what's needed for production deployment

services:
  # Ultra API Application
  ultra-api:
    image: ghcr.io/jiplay/ultra:latest
    container_name: ultra_api
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      # Override for containerized environment
      - MONGODB_URI=mongodb://ultra_user:ultra_password@mongo:27017/ultra?authSource=admin
      - POSTGRES_HOST=postgres
      - GO_ENV=production
      - LOG_LEVEL=info
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - ultra-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ultra_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ultra_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ultra_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgres-init:/docker-entrypoint-initdb.d:ro
    networks:
      - ultra-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ultra_user -d ultra_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # MongoDB Database
  mongo:
    image: mongo:7-jammy
    container_name: ultra_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ultra_user
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ultra
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
      - ./database/mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - ultra-network
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

networks:
  ultra-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  mongo_data:
    driver: local
  mongo_config:
    driver: local