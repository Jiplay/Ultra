# Ultra API Production Environment Configuration
# Copy this file to .env and update the values

# ===========================================
# APPLICATION CONFIGURATION
# ===========================================
PORT=8080
GO_ENV=production
LOG_LEVEL=info

# IMPORTANT: Generate a strong JWT secret for production!
# You can use: openssl rand -base64 64
JWT_SECRET=CHANGE_THIS_TO_A_LONG_SECURE_RANDOM_STRING_FOR_PRODUCTION

# ===========================================
# DATABASE CONFIGURATION
# ===========================================

# PostgreSQL Configuration  
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_USER=ultra_user
POSTGRES_DB=ultra_db
POSTGRES_SSL=disable

# MongoDB Configuration
# This will be automatically set to use the containerized MongoDB
MONGODB_URI=mongodb://ultra_user:ultra_password@mongo:27017/ultra?authSource=admin

# ===========================================
# PRODUCTION PASSWORDS
# ===========================================
# IMPORTANT: Change these to secure passwords in production!
# You can generate secure passwords with: openssl rand -base64 32

POSTGRES_PASSWORD=CHANGE_THIS_TO_A_SECURE_PASSWORD
MONGO_PASSWORD=CHANGE_THIS_TO_A_SECURE_PASSWORD

# ===========================================
# OPTIONAL: EXTERNAL DATABASE CONFIGURATION
# ===========================================
# If you want to use external databases instead of Docker containers,
# uncomment and modify these:

# MONGODB_URI=mongodb+srv://username:password@your-cluster.mongodb.net/ultra?retryWrites=true&w=majority
# POSTGRES_HOST=your-postgres-server.com
# POSTGRES_SSL=require

# ===========================================
# DOCKER CONFIGURATION
# ===========================================
# These are used by docker-compose for database containers
# Keep them in sync with the database passwords above